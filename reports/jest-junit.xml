<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="179" failures="2" errors="0" time="3.406">
  <testsuite name="ApiKeyService" errors="0" failures="1" skipped="0" timestamp="2025-06-18T03:35:42" time="0.391" tests="35">
    <testcase classname="ApiKeyService createApiKey should create a new API key with valid input" name="ApiKeyService createApiKey should create a new API key with valid input" time="0.004">
    </testcase>
    <testcase classname="ApiKeyService createApiKey should create API key without optional fields" name="ApiKeyService createApiKey should create API key without optional fields" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService createApiKey should throw error for invalid input" name="ApiKeyService createApiKey should throw error for invalid input" time="0.013">
    </testcase>
    <testcase classname="ApiKeyService validateApiKey should validate a valid API key" name="ApiKeyService validateApiKey should validate a valid API key" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService validateApiKey should reject invalid API key format" name="ApiKeyService validateApiKey should reject invalid API key format" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService validateApiKey should reject non-existent API key" name="ApiKeyService validateApiKey should reject non-existent API key" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService validateApiKey should reject revoked API key" name="ApiKeyService validateApiKey should reject revoked API key" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService validateApiKey should reject expired API key" name="ApiKeyService validateApiKey should reject expired API key" time="0.004">
    </testcase>
    <testcase classname="ApiKeyService validateApiKey should reject key that exceeded usage limit" name="ApiKeyService validateApiKey should reject key that exceeded usage limit" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService validateApiKey should reject IP not in whitelist" name="ApiKeyService validateApiKey should reject IP not in whitelist" time="0.002">
    </testcase>
    <testcase classname="ApiKeyService validateApiKey should accept IP in whitelist" name="ApiKeyService validateApiKey should accept IP in whitelist" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService listApiKeys should list all API keys" name="ApiKeyService listApiKeys should list all API keys" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService listApiKeys should filter by status" name="ApiKeyService listApiKeys should filter by status" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService updateApiKey should update API key fields" name="ApiKeyService updateApiKey should update API key fields" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService updateApiKey should return null for non-existent key" name="ApiKeyService updateApiKey should return null for non-existent key" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService rotateApiKey should rotate API key and return new key" name="ApiKeyService rotateApiKey should rotate API key and return new key" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService rotateApiKey should invalidate old key after rotation" name="ApiKeyService rotateApiKey should invalidate old key after rotation" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService rotateApiKey should return null for non-existent key" name="ApiKeyService rotateApiKey should return null for non-existent key" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService hasRequiredScopes should return true for admin scope" name="ApiKeyService hasRequiredScopes should return true for admin scope" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService hasRequiredScopes should return true when all required scopes are present" name="ApiKeyService hasRequiredScopes should return true when all required scopes are present" time="0">
    </testcase>
    <testcase classname="ApiKeyService hasRequiredScopes should return false when required scopes are missing" name="ApiKeyService hasRequiredScopes should return false when required scopes are missing" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService getApiKeyStats should return correct statistics" name="ApiKeyService getApiKeyStats should return correct statistics" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService setupRotation should setup rotation configuration" name="ApiKeyService setupRotation should setup rotation configuration" time="0.002">
    </testcase>
    <testcase classname="ApiKeyService setupRotation should return null for non-existent key" name="ApiKeyService setupRotation should return null for non-existent key" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService getUsageLogs should return usage logs for a key" name="ApiKeyService getUsageLogs should return usage logs for a key" time="0.001">
    </testcase>
    <testcase classname="ApiKeyService getUsageLogs should limit number of logs returned" name="ApiKeyService getUsageLogs should limit number of logs returned" time="0">
    </testcase>
    <testcase classname="CryptoUtils generateApiKey should generate API key with default options" name="CryptoUtils generateApiKey should generate API key with default options" time="0.001">
    </testcase>
    <testcase classname="CryptoUtils generateApiKey should generate API key with custom options" name="CryptoUtils generateApiKey should generate API key with custom options" time="0.001">
      <failure>Error: expect(received).not.toMatch(expected)

Expected pattern: not /_[A-Za-z0-9_-]{8}$/
Received string:      &quot;custom_a5b3e64748cdb5a65b6fe08725e7c780_fa73565a&quot;
    at Object.&lt;anonymous&gt; (/Users/cryophobic/dev/projects/tally-mcp/src/services/__tests__/api-key-service.test.ts:515:23)
    at Promise.then.completed (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:316:40)
    at _runTest (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="CryptoUtils generateApiKey should throw error for invalid length" name="CryptoUtils generateApiKey should throw error for invalid length" time="0.003">
    </testcase>
    <testcase classname="CryptoUtils validateKeyFormat should validate correct key format" name="CryptoUtils validateKeyFormat should validate correct key format" time="0.003">
    </testcase>
    <testcase classname="CryptoUtils validateKeyFormat should reject invalid key format" name="CryptoUtils validateKeyFormat should reject invalid key format" time="0.002">
    </testcase>
    <testcase classname="CryptoUtils hashApiKey should generate consistent hash for same key" name="CryptoUtils hashApiKey should generate consistent hash for same key" time="0.002">
    </testcase>
    <testcase classname="CryptoUtils hashApiKey should generate different hashes for different keys" name="CryptoUtils hashApiKey should generate different hashes for different keys" time="0.001">
    </testcase>
    <testcase classname="CryptoUtils maskSensitiveData should mask data correctly" name="CryptoUtils maskSensitiveData should mask data correctly" time="0.004">
    </testcase>
    <testcase classname="CryptoUtils maskSensitiveData should handle short data" name="CryptoUtils maskSensitiveData should handle short data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Health and Metrics Endpoints" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:43" time="1.279" tests="3">
    <testcase classname="Health and Metrics Endpoints GET /health should return 200 OK with status &quot;ok&quot; when the server is healthy" name="Health and Metrics Endpoints GET /health should return 200 OK with status &quot;ok&quot; when the server is healthy" time="0.025">
    </testcase>
    <testcase classname="Health and Metrics Endpoints GET /health should return 503 Service Unavailable when the server is unhealthy" name="Health and Metrics Endpoints GET /health should return 503 Service Unavailable when the server is unhealthy" time="0.011">
    </testcase>
    <testcase classname="Health and Metrics Endpoints GET /metrics should return 200 OK and Prometheus-compatible metrics" name="Health and Metrics Endpoints GET /metrics should return 200 OK and Prometheus-compatible metrics" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="SentryService" errors="0" failures="1" skipped="0" timestamp="2025-06-18T03:35:44" time="0.206" tests="3">
    <testcase classname="SentryService initialize should initialize Sentry if DSN is provided" name="SentryService initialize should initialize Sentry if DSN is provided" time="0.015">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: ObjectContaining {&quot;dsn&quot;: &quot;https://test@sentry.io/123&quot;}

Number of calls: 0
    at Object.&lt;anonymous&gt; (/Users/cryophobic/dev/projects/tally-mcp/src/services/__tests__/SentryService.test.ts:27:27)
    at Promise.then.completed (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:316:40)
    at _runTest (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/cryophobic/dev/projects/tally-mcp/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="SentryService initialize should not initialize Sentry if DSN is not provided" name="SentryService initialize should not initialize Sentry if DSN is not provided" time="0.001">
    </testcase>
    <testcase classname="SentryService captureException should capture an exception with context" name="SentryService captureException should capture an exception with context" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TallyApiService - Schema Validation" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:44" time="0.169" tests="10">
    <testcase classname="TallyApiService - Schema Validation createForm payload validation validates a simple form with title and text question" name="TallyApiService - Schema Validation createForm payload validation validates a simple form with title and text question" time="0.003">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation createForm payload validation validates a complex form with multiple question types" name="TallyApiService - Schema Validation createForm payload validation validates a complex form with multiple question types" time="0.005">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation createForm payload validation rejects invalid form configuration - empty title" name="TallyApiService - Schema Validation createForm payload validation rejects invalid form configuration - empty title" time="0.007">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation createForm payload validation validates form with no questions" name="TallyApiService - Schema Validation createForm payload validation validates form with no questions" time="0">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation createForm payload validation validates all generated blocks have proper UUIDs" name="TallyApiService - Schema Validation createForm payload validation validates all generated blocks have proper UUIDs" time="0.002">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation createForm payload validation validates block types are supported by Tally" name="TallyApiService - Schema Validation createForm payload validation validates block types are supported by Tally" time="0.001">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation updateForm payload validation validates partial form updates" name="TallyApiService - Schema Validation updateForm payload validation validates partial form updates" time="0.001">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation updateForm payload validation rejects invalid update payloads" name="TallyApiService - Schema Validation updateForm payload validation rejects invalid update payloads" time="0.006">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation error handling for malformed blocks catches validation errors before API submission" name="TallyApiService - Schema Validation error handling for malformed blocks catches validation errors before API submission" time="0.002">
    </testcase>
    <testcase classname="TallyApiService - Schema Validation comprehensive schema coverage tests all supported question types generate valid blocks" name="TallyApiService - Schema Validation comprehensive schema coverage tests all supported question types generate valid blocks" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="MonitoringServiceImpl" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:44" time="0.192" tests="6">
    <testcase classname="MonitoringServiceImpl trackRequest should track request metrics and log info" name="MonitoringServiceImpl trackRequest should track request metrics and log info" time="0.002">
    </testcase>
    <testcase classname="MonitoringServiceImpl trackRequest should handle requests with errors" name="MonitoringServiceImpl trackRequest should handle requests with errors" time="0.001">
    </testcase>
    <testcase classname="MonitoringServiceImpl trackApiCall should track a successful API call" name="MonitoringServiceImpl trackApiCall should track a successful API call" time="0">
    </testcase>
    <testcase classname="MonitoringServiceImpl trackApiCall should track a failed API call" name="MonitoringServiceImpl trackApiCall should track a failed API call" time="0">
    </testcase>
    <testcase classname="MonitoringServiceImpl trackError should track an error with context" name="MonitoringServiceImpl trackError should track an error with context" time="0.005">
    </testcase>
    <testcase classname="MonitoringServiceImpl trackExecution should track execution time of a labeled process" name="MonitoringServiceImpl trackExecution should track execution time of a labeled process" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FormModificationParser" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:45" time="0.176" tests="50">
    <testcase classname="FormModificationParser Add Field Commands should parse &quot;add text field&quot; command" name="FormModificationParser Add Field Commands should parse &quot;add text field&quot; command" time="0.002">
    </testcase>
    <testcase classname="FormModificationParser Add Field Commands should parse &quot;add a new email field&quot; command" name="FormModificationParser Add Field Commands should parse &quot;add a new email field&quot; command" time="0">
    </testcase>
    <testcase classname="FormModificationParser Add Field Commands should parse &quot;add phone number field&quot; command" name="FormModificationParser Add Field Commands should parse &quot;add phone number field&quot; command" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Add Field Commands should handle unknown field types" name="FormModificationParser Add Field Commands should handle unknown field types" time="0.002">
    </testcase>
    <testcase classname="FormModificationParser Remove Field Commands should parse &quot;remove question 3&quot; command" name="FormModificationParser Remove Field Commands should parse &quot;remove question 3&quot; command" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Remove Field Commands should parse &quot;delete field number 5&quot; command" name="FormModificationParser Remove Field Commands should parse &quot;delete field number 5&quot; command" time="0">
    </testcase>
    <testcase classname="FormModificationParser Remove Field Commands should parse &quot;remove the email field&quot; command" name="FormModificationParser Remove Field Commands should parse &quot;remove the email field&quot; command" time="0">
    </testcase>
    <testcase classname="FormModificationParser Requirement Commands should parse &quot;make field 2 required&quot; command" name="FormModificationParser Requirement Commands should parse &quot;make field 2 required&quot; command" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Requirement Commands should parse &quot;make the email field required&quot; command" name="FormModificationParser Requirement Commands should parse &quot;make the email field required&quot; command" time="0">
    </testcase>
    <testcase classname="FormModificationParser Requirement Commands should parse &quot;make question 1 optional&quot; command" name="FormModificationParser Requirement Commands should parse &quot;make question 1 optional&quot; command" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Form Update Commands should parse update title command" name="FormModificationParser Form Update Commands should parse update title command" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Form Update Commands should parse update description command" name="FormModificationParser Form Update Commands should parse update description command" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Reorder Commands should parse &quot;move field 3 to position 1&quot; command" name="FormModificationParser Reorder Commands should parse &quot;move field 3 to position 1&quot; command" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Reorder Commands should parse &quot;move question 2 to 5&quot; command" name="FormModificationParser Reorder Commands should parse &quot;move question 2 to 5&quot; command" time="0">
    </testcase>
    <testcase classname="FormModificationParser Option Commands should parse add option command" name="FormModificationParser Option Commands should parse add option command" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Ambiguous Commands should handle completely unknown commands" name="FormModificationParser Ambiguous Commands should handle completely unknown commands" time="0">
    </testcase>
    <testcase classname="FormModificationParser Ambiguous Commands should detect low confidence commands as ambiguous" name="FormModificationParser Ambiguous Commands should detect low confidence commands as ambiguous" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Multiple Commands should parse multiple commands separated by &quot;and&quot;" name="FormModificationParser Multiple Commands should parse multiple commands separated by &quot;and&quot;" time="0">
    </testcase>
    <testcase classname="FormModificationParser Multiple Commands should parse multiple commands separated by commas" name="FormModificationParser Multiple Commands should parse multiple commands separated by commas" time="0.002">
    </testcase>
    <testcase classname="FormModificationParser Multiple Commands should parse multiple commands separated by &quot;then&quot;" name="FormModificationParser Multiple Commands should parse multiple commands separated by &quot;then&quot;" time="0">
    </testcase>
    <testcase classname="FormModificationParser Clarification Features should need clarification for low confidence commands" name="FormModificationParser Clarification Features should need clarification for low confidence commands" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Clarification Features should generate suggestions for add commands" name="FormModificationParser Clarification Features should generate suggestions for add commands" time="0">
    </testcase>
    <testcase classname="FormModificationParser Clarification Features should generate suggestions for required commands" name="FormModificationParser Clarification Features should generate suggestions for required commands" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Clarification Features should generate suggestions for remove commands" name="FormModificationParser Clarification Features should generate suggestions for remove commands" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;text&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;text&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;input&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;input&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;textarea&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;textarea&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;long text&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;long text&quot; to correct QuestionType" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;email&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;email&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;email address&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;email address&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;number&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;number&quot; to correct QuestionType" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;numeric&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;numeric&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;phone&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;phone&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;phone number&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;phone number&quot; to correct QuestionType" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;url&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;url&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;website&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;website&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;date&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;date&quot; to correct QuestionType" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;time&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;time&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;rating&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;rating&quot; to correct QuestionType" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;stars&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;stars&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;file&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;file&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;upload&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;upload&quot; to correct QuestionType" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;signature&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;signature&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;choice&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;choice&quot; to correct QuestionType" time="0.002">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;multiple choice&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;multiple choice&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;select&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;select&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;dropdown&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;dropdown&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;checkboxes&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;checkboxes&quot; to correct QuestionType" time="0">
    </testcase>
    <testcase classname="FormModificationParser Field Type Mapping should map &quot;scale&quot; to correct QuestionType" name="FormModificationParser Field Type Mapping should map &quot;scale&quot; to correct QuestionType" time="0.001">
    </testcase>
    <testcase classname="FormModificationParser Case Insensitivity should parse commands regardless of case" name="FormModificationParser Case Insensitivity should parse commands regardless of case" time="0">
    </testcase>
  </testsuite>
  <testsuite name="FormPublicationService" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:45" time="0.184" tests="21">
    <testcase classname="FormPublicationService getPublicationSettings should return default publication settings for a form" name="FormPublicationService getPublicationSettings should return default publication settings for a form" time="0.002">
    </testcase>
    <testcase classname="FormPublicationService updatePublicationSettings should update publication settings for a form" name="FormPublicationService updatePublicationSettings should update publication settings for a form" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService publishForm should publish a form with default public visibility" name="FormPublicationService publishForm should publish a form with default public visibility" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService publishForm should publish a form with password protection" name="FormPublicationService publishForm should publish a form with password protection" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService unpublishForm should unpublish a form" name="FormPublicationService unpublishForm should unpublish a form" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService generateEmbedCode should generate embed code with default settings" name="FormPublicationService generateEmbedCode should generate embed code with default settings" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService generateEmbedCode should generate embed code with custom settings" name="FormPublicationService generateEmbedCode should generate embed code with custom settings" time="0.003">
    </testcase>
    <testcase classname="FormPublicationService generateShareLink should generate a standard share link" name="FormPublicationService generateShareLink should generate a standard share link" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService generateShareLink should generate a password-protected share link with expiration" name="FormPublicationService generateShareLink should generate a password-protected share link with expiration" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService generateShareLink should generate a share link with custom slug" name="FormPublicationService generateShareLink should generate a share link with custom slug" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService getShareLinks should return empty array for forms with no share links" name="FormPublicationService getShareLinks should return empty array for forms with no share links" time="0">
    </testcase>
    <testcase classname="FormPublicationService updateShareLink should update a share link" name="FormPublicationService updateShareLink should update a share link" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService deactivateShareLink should deactivate a share link" name="FormPublicationService deactivateShareLink should deactivate a share link" time="0">
    </testcase>
    <testcase classname="FormPublicationService getFormSharingStats should return default sharing statistics" name="FormPublicationService getFormSharingStats should return default sharing statistics" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService getFormAnalytics should return analytics data for different periods" name="FormPublicationService getFormAnalytics should return analytics data for different periods" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService performBulkOperation should perform bulk publish operation" name="FormPublicationService performBulkOperation should perform bulk publish operation" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService performBulkOperation should handle bulk operation failures" name="FormPublicationService performBulkOperation should handle bulk operation failures" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService validateFormForPublication should validate a form successfully" name="FormPublicationService validateFormForPublication should validate a form successfully" time="0.003">
    </testcase>
    <testcase classname="FormPublicationService validateFormForPublication should return validation errors for invalid form" name="FormPublicationService validateFormForPublication should return validation errors for invalid form" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService validateFormForPublication should handle form not found" name="FormPublicationService validateFormForPublication should handle form not found" time="0.001">
    </testcase>
    <testcase classname="FormPublicationService validateFormForPublication should handle API errors gracefully" name="FormPublicationService validateFormForPublication should handle API errors gracefully" time="0">
    </testcase>
  </testsuite>
  <testsuite name="FormModificationOperations" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:45" time="0.16" tests="26">
    <testcase classname="FormModificationOperations executeOperation should handle unknown operation types" name="FormModificationOperations executeOperation should handle unknown operation types" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations executeOperation should handle errors gracefully" name="FormModificationOperations executeOperation should handle errors gracefully" time="0.003">
    </testcase>
    <testcase classname="FormModificationOperations ADD_FIELD operation should add a text field successfully" name="FormModificationOperations ADD_FIELD operation should add a text field successfully" time="0">
    </testcase>
    <testcase classname="FormModificationOperations ADD_FIELD operation should add a choice field with options" name="FormModificationOperations ADD_FIELD operation should add a choice field with options" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations ADD_FIELD operation should generate default label when not provided" name="FormModificationOperations ADD_FIELD operation should generate default label when not provided" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations ADD_FIELD operation should fail when field type is missing" name="FormModificationOperations ADD_FIELD operation should fail when field type is missing" time="0">
    </testcase>
    <testcase classname="FormModificationOperations REMOVE_FIELD operation should remove field by number" name="FormModificationOperations REMOVE_FIELD operation should remove field by number" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations REMOVE_FIELD operation should remove field by label" name="FormModificationOperations REMOVE_FIELD operation should remove field by label" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations REMOVE_FIELD operation should fail when field is not found" name="FormModificationOperations REMOVE_FIELD operation should fail when field is not found" time="0">
    </testcase>
    <testcase classname="FormModificationOperations MAKE_REQUIRED/MAKE_OPTIONAL operations should make field required" name="FormModificationOperations MAKE_REQUIRED/MAKE_OPTIONAL operations should make field required" time="0">
    </testcase>
    <testcase classname="FormModificationOperations MAKE_REQUIRED/MAKE_OPTIONAL operations should make field optional" name="FormModificationOperations MAKE_REQUIRED/MAKE_OPTIONAL operations should make field optional" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations UPDATE_TITLE operation should update form title" name="FormModificationOperations UPDATE_TITLE operation should update form title" time="0">
    </testcase>
    <testcase classname="FormModificationOperations UPDATE_TITLE operation should fail when new title is missing" name="FormModificationOperations UPDATE_TITLE operation should fail when new title is missing" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations UPDATE_DESCRIPTION operation should update form description" name="FormModificationOperations UPDATE_DESCRIPTION operation should update form description" time="0">
    </testcase>
    <testcase classname="FormModificationOperations REORDER_FIELD operation should reorder field successfully" name="FormModificationOperations REORDER_FIELD operation should reorder field successfully" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations REORDER_FIELD operation should fail with invalid source position" name="FormModificationOperations REORDER_FIELD operation should fail with invalid source position" time="0">
    </testcase>
    <testcase classname="FormModificationOperations ADD_OPTION operation should add option to choice field" name="FormModificationOperations ADD_OPTION operation should add option to choice field" time="0">
    </testcase>
    <testcase classname="FormModificationOperations ADD_OPTION operation should fail when adding option to non-choice field" name="FormModificationOperations ADD_OPTION operation should fail when adding option to non-choice field" time="0.002">
    </testcase>
    <testcase classname="FormModificationOperations ADD_OPTION operation should fail when option text is missing" name="FormModificationOperations ADD_OPTION operation should fail when option text is missing" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations MODIFY_FIELD operation should modify field label" name="FormModificationOperations MODIFY_FIELD operation should modify field label" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations MODIFY_FIELD operation should modify multiple field properties" name="FormModificationOperations MODIFY_FIELD operation should modify multiple field properties" time="0">
    </testcase>
    <testcase classname="FormModificationOperations MODIFY_FIELD operation should fail when no modifications are specified" name="FormModificationOperations MODIFY_FIELD operation should fail when no modifications are specified" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations validateFormConfig should validate valid form configuration" name="FormModificationOperations validateFormConfig should validate valid form configuration" time="0">
    </testcase>
    <testcase classname="FormModificationOperations validateFormConfig should detect duplicate field IDs" name="FormModificationOperations validateFormConfig should detect duplicate field IDs" time="0">
    </testcase>
    <testcase classname="FormModificationOperations validateFormConfig should detect empty field labels" name="FormModificationOperations validateFormConfig should detect empty field labels" time="0.001">
    </testcase>
    <testcase classname="FormModificationOperations validateFormConfig should detect choice fields without options" name="FormModificationOperations validateFormConfig should detect choice fields without options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="WorkspaceService" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:45" time="0.155" tests="5">
    <testcase classname="WorkspaceService getWorkspaces should call TallyApiClient.getWorkspaces and return the result" name="WorkspaceService getWorkspaces should call TallyApiClient.getWorkspaces and return the result" time="0.002">
    </testcase>
    <testcase classname="WorkspaceService getWorkspace should call TallyApiClient.getWorkspace and return the result" name="WorkspaceService getWorkspace should call TallyApiClient.getWorkspace and return the result" time="0.001">
    </testcase>
    <testcase classname="WorkspaceService inviteUser should call TallyApiClient.inviteUserToWorkspace with the correct parameters" name="WorkspaceService inviteUser should call TallyApiClient.inviteUserToWorkspace with the correct parameters" time="0.001">
    </testcase>
    <testcase classname="WorkspaceService removeUser should call TallyApiClient.removeUserFromWorkspace with the correct parameters" name="WorkspaceService removeUser should call TallyApiClient.removeUserFromWorkspace with the correct parameters" time="0.001">
    </testcase>
    <testcase classname="WorkspaceService updateUserRole should call TallyApiClient.updateUserRole with the correct parameters" name="WorkspaceService updateUserRole should call TallyApiClient.updateUserRole with the correct parameters" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="NlpService" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:45" time="0.138" tests="4">
    <testcase classname="NlpService customizeFormConfig should add a new question to the form" name="NlpService customizeFormConfig should add a new question to the form" time="0.001">
    </testcase>
    <testcase classname="NlpService customizeFormConfig should remove an existing question from the form" name="NlpService customizeFormConfig should remove an existing question from the form" time="0.001">
    </testcase>
    <testcase classname="NlpService customizeFormConfig should update the form title" name="NlpService customizeFormConfig should update the form title" time="0">
    </testcase>
    <testcase classname="NlpService customizeFormConfig should handle multiple commands" name="NlpService customizeFormConfig should handle multiple commands" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TemplateService" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:45" time="0.142" tests="12">
    <testcase classname="TemplateService getTemplates should return all available templates" name="TemplateService getTemplates should return all available templates" time="0.001">
    </testcase>
    <testcase classname="TemplateService findTemplateById should find a template by its ID" name="TemplateService findTemplateById should find a template by its ID" time="0.001">
    </testcase>
    <testcase classname="TemplateService findTemplateById should return undefined for a non-existent template ID" name="TemplateService findTemplateById should return undefined for a non-existent template ID" time="0">
    </testcase>
    <testcase classname="TemplateService instantiateTemplate should instantiate a form from a template" name="TemplateService instantiateTemplate should instantiate a form from a template" time="0">
    </testcase>
    <testcase classname="TemplateService instantiateTemplate should override the title if a custom title is provided" name="TemplateService instantiateTemplate should override the title if a custom title is provided" time="0.001">
    </testcase>
    <testcase classname="TemplateService instantiateTemplate should return undefined for a non-existent template ID" name="TemplateService instantiateTemplate should return undefined for a non-existent template ID" time="0">
    </testcase>
    <testcase classname="TemplateService instantiateTemplate should create a deep copy of the form configuration" name="TemplateService instantiateTemplate should create a deep copy of the form configuration" time="0">
    </testcase>
    <testcase classname="TemplateService createTemplate should create a new template and add it to the registry" name="TemplateService createTemplate should create a new template and add it to the registry" time="0.001">
    </testcase>
    <testcase classname="TemplateService updateTemplate should update an existing template" name="TemplateService updateTemplate should update an existing template" time="0">
    </testcase>
    <testcase classname="TemplateService updateTemplate should return undefined for a non-existent template ID" name="TemplateService updateTemplate should return undefined for a non-existent template ID" time="0.001">
    </testcase>
    <testcase classname="TemplateService deleteTemplate should delete an existing template" name="TemplateService deleteTemplate should delete an existing template" time="0">
    </testcase>
    <testcase classname="TemplateService deleteTemplate should return false for a non-existent template ID" name="TemplateService deleteTemplate should return false for a non-existent template ID" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Matrix Question Support" errors="0" failures="0" skipped="0" timestamp="2025-06-18T03:35:45" time="0.138" tests="4">
    <testcase classname="Matrix Question Support Matrix Question Creation should create a matrix question with default configuration" name="Matrix Question Support Matrix Question Creation should create a matrix question with default configuration" time="0.001">
    </testcase>
    <testcase classname="Matrix Question Support Matrix Question Creation should include matrix in choice field types" name="Matrix Question Support Matrix Question Creation should include matrix in choice field types" time="0.001">
    </testcase>
    <testcase classname="Matrix Question Support Matrix Question Creation should generate appropriate default label for matrix questions" name="Matrix Question Support Matrix Question Creation should generate appropriate default label for matrix questions" time="0">
    </testcase>
    <testcase classname="Matrix Question Support Matrix Question Structure should have properly structured rows and columns" name="Matrix Question Support Matrix Question Structure should have properly structured rows and columns" time="0.001">
    </testcase>
  </testsuite>
</testsuites>